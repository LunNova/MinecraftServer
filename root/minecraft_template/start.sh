#!/bin/bash
# THIS FILE IS AUTO GENERATED AND WILL BE REPLACED WHEN THE DOCKER IS STARTED

# Ensure working directory is correct
cd /minecraft

if [ ! -f ${MCJAR} ]; then
	curl -o ${MCJAR} ${MCJARURL}
fi
if [ ! -f ${LAUNCHWRAPPERJAR} ]; then
	mkdir -p $(dirname ${LAUNCHWRAPPERJAR})
	curl -o ${LAUNCHWRAPPERJAR} ${LAUNCHWRAPPERJARURL}
fi

eula_false() {
	grep -q 'eula=false' eula.txt
	return $?
}

_term() { 
	echo "Caught SIGTERM signal, forwarding to $mc" 
	kill -TERM "$mc"
	wait $mc
}
_int() { 
	echo "Caught SIGINT signal, forwarding to $mc" 
	kill -INT "$mc"
	wait $mc
}
_hup() { 
	echo "Caught SIGHUP signal, forwarding to $mc" 
	kill -HUP "$mc"
	wait $mc
}

trap _term SIGTERM
trap _int SIGINT
trap _hup SIGHUP

start_server() {
	STARTJAR=${MCJAR}
	if [ "$ENABLEFORGE"="true" ]; then
		STARTJAR=${FORGEJAR}
	fi
	
	if [ ! -f ${STARTJAR} ]; then
		echo "Missing startup jar $STARTJAR"
		exit
	fi
	
	# Override ENV settings from file if it exists
	if [ -f environment.sh ]; then
		. ./environment.sh
	fi
	
	echo "java -server ${JAVAPARAMETERS} -jar ${STARTJAR} ${JARPARAMETERS}"
	java -server ${JAVAPARAMETERS} -jar ${STARTJAR} ${JARPARAMETERS} &> logs/console.txt &
	
	mc=$!
	wait $mc
}

# Autogenerate eula if needed
if [ ! -f eula.txt ] || [ "$MCEULA"="true" ]; then
	echo -e "#Autogenerated\neula=${MCEULA}\n" > eula.txt
fi

if eula_false ; then
	echo "You must agree to the eula in eula.txt or set environment var EULA=true for the server to start"
	exit
fi

echo "Starting server"
rm -f autostart.stamp
start_server

while true ; do
	rm -f autostart.stamp
	echo "Starting server"
	start_server
	echo "Server process finished"
	
	if ([ ! -e autostart.stamp ] && [ ! "$AUTORESTART"="true" ]) || [ -f stop.stamp ]; then
		echo "Exiting"
		rm -f stop.stamp
		exit
	fi
	
	echo "Restarting server in 5 seconds"
	sleep 5
done

